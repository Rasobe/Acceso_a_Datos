package ud5_sesion4_ej13;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author rasob
 */
public class EmpleadosDepartamentos extends javax.swing.JFrame {

	public static AccesoBdatos abd;

	/**
	 * Creates new form NewJFrame
	 */
	public EmpleadosDepartamentos() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		jLabel5 = new javax.swing.JLabel();
		jLabel6 = new javax.swing.JLabel();
		jTextFieldnumEmpleado = new javax.swing.JTextField();
		jTextFieldSalario = new javax.swing.JTextField();
		jTextFieldApellido = new javax.swing.JTextField();
		jTextFielOficio = new javax.swing.JTextField();
		jTextFieldComision = new javax.swing.JTextField();
		jButtonModificar = new javax.swing.JButton();
		jButtonInsertar = new javax.swing.JButton();
		jButtonEliminar = new javax.swing.JButton();
		jButtonSalir = new javax.swing.JButton();
		jButtonLimpiar = new javax.swing.JButton();
		jButtonConsultarEmpleado = new javax.swing.JButton();
		jComboBoxElegirDepartamento = new javax.swing.JComboBox<>();
		jComboBoxElegirDirector = new javax.swing.JComboBox<>();
		jLabel7 = new javax.swing.JLabel();
		jTextField1 = new javax.swing.JTextField();
		jLabel8 = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		
		setTitle("GESTIÓN DE EMPLEADOS");

		jLabel1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
		jLabel1.setText("GESTIÓN DE EMPLEADOS");

		jLabel2.setText("Nº EMPLEADO:");

		jLabel3.setText("A:PELLIDO");

		jLabel4.setText("OFICIO:");

		jLabel5.setText("SALARIO:");

		jLabel6.setText("COMISIÓN:");

		jButtonModificar.setText("MODIFICAR");
		jButtonModificar.addActionListener(new OyenteBoton());

		jButtonInsertar.setText("INSERTAR");
		jButtonInsertar.addActionListener(new OyenteBoton());

		jButtonEliminar.setText("ELIMINAR");
		jButtonEliminar.addActionListener(new OyenteBoton());

		jButtonSalir.setText("SALIR");
		jButtonSalir.addActionListener(new OyenteBoton());

		jButtonLimpiar.setText("LIMPIAR");
		jButtonLimpiar.addActionListener(new OyenteBoton());

		jButtonConsultarEmpleado.setText("CONSULTAR EMPLEADO");
		jButtonConsultarEmpleado.addActionListener(new OyenteBoton());

		jComboBoxElegirDepartamento.setModel(
				new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

		jComboBoxElegirDirector.setModel(
				new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

		jLabel7.setText("FECHA ALTA:");

		jLabel8.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
		jLabel8.setText("(yyyy-MM-dd)");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE)
								.addComponent(jButtonInsertar, javax.swing.GroupLayout.PREFERRED_SIZE, 110,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(44, 44, 44)
								.addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 110,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(48, 48, 48)
								.addComponent(jButtonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 110,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(100, 100, 100))
				.addGroup(layout.createSequentialGroup().addGroup(layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup().addGap(59, 59, 59).addComponent(jLabel1))
						.addGroup(layout.createSequentialGroup().addGap(31, 31, 31)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(jLabel2).addComponent(jLabel3).addComponent(jLabel5)
										.addComponent(jLabel4).addComponent(jLabel6))
								.addGap(18, 18, 18)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
										.addGroup(layout.createSequentialGroup().addGroup(layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
												.addComponent(jTextFieldnumEmpleado,
														javax.swing.GroupLayout.PREFERRED_SIZE, 113,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jTextFieldComision, javax.swing.GroupLayout.DEFAULT_SIZE,
														115, Short.MAX_VALUE)
												.addComponent(jTextFieldSalario))
												.addGroup(layout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(layout.createSequentialGroup().addGap(68, 68, 68)
																.addComponent(jButtonConsultarEmpleado,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE))
														.addGroup(layout.createSequentialGroup().addGap(46, 46, 46)
																.addComponent(jLabel7).addGap(18, 18, 18)
																.addComponent(jTextField1,
																		javax.swing.GroupLayout.PREFERRED_SIZE, 130,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(jLabel8).addGap(0, 0, Short.MAX_VALUE))))
										.addGroup(layout.createSequentialGroup()
												.addComponent(jTextFieldApellido,
														javax.swing.GroupLayout.PREFERRED_SIZE, 264,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(18, 18, 18).addComponent(jComboBoxElegirDepartamento,
														javax.swing.GroupLayout.PREFERRED_SIZE, 191,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(layout.createSequentialGroup()
												.addComponent(jTextFielOficio, javax.swing.GroupLayout.PREFERRED_SIZE,
														264, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(18, 18, 18).addComponent(jComboBoxElegirDirector, 0,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
						.addGroup(layout.createSequentialGroup().addGap(184, 184, 184)
								.addComponent(jButtonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 110,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(42, 42, 42).addComponent(jButtonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE,
										110, javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addContainerGap(27, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
						.createSequentialGroup().addGap(32, 32, 32).addComponent(jLabel1).addGap(18, 18, 18)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel2)
								.addComponent(jTextFieldnumEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jButtonConsultarEmpleado))
						.addGap(18, 18, 18)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel3)
								.addComponent(jTextFieldApellido, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jComboBoxElegirDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(18, 18, 18)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel4)
								.addComponent(jTextFielOficio, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jComboBoxElegirDirector, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(18, 18, 18)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel5).addComponent(jTextFieldSalario,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(18, 18, 18))
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
								layout.createSequentialGroup().addContainerGap()
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel7)
												.addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jLabel8))
										.addGap(1, 1, 1)))
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel6)
						.addComponent(jTextFieldComision, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(jButtonModificar).addComponent(jButtonEliminar).addComponent(jButtonInsertar))
				.addGap(18, 18, 18).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(jButtonSalir).addComponent(jButtonLimpiar))
				.addGap(47, 47, 47)));

		pack();
	}// </editor-fold>

	class OyenteBoton implements ActionListener {
		public void actionPerformed(ActionEvent event) {
			AccesoBdatos abd = new AccesoBdatos();
			abd.conectar();

			if (event.getSource().equals(jButtonEliminar)) {
				if (jTextFieldnumEmpleado.getText().isEmpty()) {
					JOptionPane.showMessageDialog(null,
							"No se puede eliminar un Empleado con el campo 'Nº EMPLEADO' vacío.", "Error",
							JOptionPane.ERROR_MESSAGE);
				} else {
					abd.eliminarEmpleado(Short.parseShort(jTextFieldnumEmpleado.getText()));
				}
			}
			if (event.getSource().equals(jButtonInsertar)) {
				if (jTextFieldnumEmpleado.getText().isEmpty() || jTextField1.getText().isEmpty()
						|| jTextFieldApellido.getText().isEmpty() || jTextFieldComision.getText().isEmpty()
						|| jTextFieldSalario.getText().isEmpty() || jTextFielOficio.getText().isEmpty()
						|| jComboBoxElegirDepartamento.getSelectedIndex() == 0
						|| jComboBoxElegirDirector.getSelectedIndex() == 0) {
					JOptionPane.showMessageDialog(null, "Deben estar todos los campos rellenados", "Error",
							JOptionPane.ERROR_MESSAGE);
				} else {

					try {
						short dptoId = Short
								.parseShort(jComboBoxElegirDepartamento.getSelectedItem().toString().substring(0,
										jComboBoxElegirDepartamento.getSelectedItem().toString().indexOf("/") - 1));
						short empId = Short.parseShort(jComboBoxElegirDirector.getSelectedItem().toString().substring(0,
								jComboBoxElegirDirector.getSelectedItem().toString().indexOf("/") - 1));
						SimpleDateFormat formateador = new SimpleDateFormat("yyyy-MM-dd");
						Date fecha = null;

						fecha = formateador.parse(jTextField1.getText());

						Empleados e = new Empleados(Short.parseShort(jTextFieldnumEmpleado.getText()),
								abd.recogerDepartamentoPorId(dptoId), jTextFieldApellido.getText(),
								jTextFielOficio.getText(), empId, fecha, Float.parseFloat(jTextFieldSalario.getText()),
								Float.parseFloat(jTextFieldComision.getText()));

						abd.insertarEmpleado(e);

					} catch (ParseException e) {
						JOptionPane.showMessageDialog(null,
								"Revisa los campos 'Nº EMPLEADO', 'SALARIO', 'COMISION' y 'FECHA ALTA'.", "Error",
								JOptionPane.ERROR_MESSAGE);
					} catch (Exception e) {
						JOptionPane.showMessageDialog(null, "Pon una fecha correcta.", "Error",
								JOptionPane.ERROR_MESSAGE);
					}
				}
			}

			if (event.getSource().equals(jButtonModificar)) {
				if (jTextFieldnumEmpleado.getText().isEmpty() || jTextField1.getText().isEmpty()
						|| jTextFieldApellido.getText().isEmpty() || jTextFieldComision.getText().isEmpty()
						|| jTextFieldSalario.getText().isEmpty() || jTextFielOficio.getText().isEmpty()
						|| jComboBoxElegirDepartamento.getSelectedIndex() == 0
						|| jComboBoxElegirDirector.getSelectedIndex() == 0) {
					JOptionPane.showMessageDialog(null, "Deben estar todos los campos rellenados", "Error",
							JOptionPane.ERROR_MESSAGE);
				} else {

					try {
						short dptoId = Short
								.parseShort(jComboBoxElegirDepartamento.getSelectedItem().toString().substring(0,
										jComboBoxElegirDepartamento.getSelectedItem().toString().indexOf("/") - 1));
						short empId = Short.parseShort(jComboBoxElegirDirector.getSelectedItem().toString().substring(0,
								jComboBoxElegirDirector.getSelectedItem().toString().indexOf("/") - 1));
						SimpleDateFormat formateador = new SimpleDateFormat("yyyy-MM-dd");
						Date fecha = null;

						fecha = formateador.parse(jTextField1.getText());

						Empleados e = new Empleados(Short.parseShort(jTextFieldnumEmpleado.getText()),
								abd.recogerDepartamentoPorId(dptoId), jTextFieldApellido.getText(),
								jTextFielOficio.getText(), empId, fecha, Float.parseFloat(jTextFieldSalario.getText()),
								Float.parseFloat(jTextFieldComision.getText()));

						abd.actualizarEmpleado(e);

					} catch (ParseException e) {
						JOptionPane.showMessageDialog(null,
								"Revisa los campos 'Nº EMPLEADO', 'SALARIO', 'COMISION' y 'FECHA ALTA'.", "Error",
								JOptionPane.ERROR_MESSAGE);
					} catch (Exception e) {
						JOptionPane.showMessageDialog(null, "Pon una fecha correcta.", "Error",
								JOptionPane.ERROR_MESSAGE);
					}
				}
			}

			if (event.getSource().equals(jButtonConsultarEmpleado)) {
				if (jTextFieldnumEmpleado.getText().isEmpty()) {
					JOptionPane.showMessageDialog(null,
							"El campo 'Nº EMPLEADO' es ogligatorio para mostrar un empleado.", "Error",
							JOptionPane.ERROR_MESSAGE);
				} else {
					try {
						short id = Short.parseShort(jTextFieldnumEmpleado.getText());
						Empleados e = abd.recogerEmpleadoPorId(id);

						if (e != null) {

							SimpleDateFormat formateador = new SimpleDateFormat("yyyy-MM-dd");

							jTextFieldApellido.setText(e.getApellido());
							jTextFieldComision.setText(String.valueOf(e.getComision()));
							jTextField1.setText(formateador.format(e.getFechaAlt()));
							jTextFieldSalario.setText(String.valueOf(e.getSalario()));
							jTextFielOficio.setText(e.getOficio());

							DefaultComboBoxModel<String> dcbm1 = (DefaultComboBoxModel) jComboBoxElegirDepartamento
									.getModel();

							for (int i = 0; i < dcbm1.getSize(); i++) {
								if (dcbm1.getElementAt(i).toString().indexOf("/") >= 0) {
									short dptoId = Short.parseShort(dcbm1.getElementAt(i).toString().substring(0,
											dcbm1.getElementAt(i).toString().indexOf("/") - 1));
									if (dptoId == e.getDepartamentos().getDeptNo()) {
										jComboBoxElegirDepartamento.setSelectedIndex(i);
									}
								}
							}

							DefaultComboBoxModel<String> dcbm2 = (DefaultComboBoxModel) jComboBoxElegirDirector
									.getModel();

							for (int i = 0; i < dcbm2.getSize(); i++) {
								if (dcbm2.getElementAt(i).toString().indexOf("/") >= 0) {
									if (e.getDir() != null) {
										short empId = Short.parseShort(dcbm2.getElementAt(i).toString().substring(0,
												dcbm2.getElementAt(i).toString().indexOf("/") - 1));
										if (empId == e.getDir()) {
											jComboBoxElegirDirector.setSelectedIndex(i);
										}
									} else {
										jComboBoxElegirDirector.setSelectedIndex(0);
									}
								}

							}

						} else {
							JOptionPane.showMessageDialog(null, "Este empleado no existe.", "Error",
									JOptionPane.ERROR_MESSAGE);
						}

					} catch (Exception p) {
						JOptionPane.showMessageDialog(null,
								"El campo 'Nº EMPLEADO' tiene que ser un número de formato SHORT (p.j 10).", "Error",
								JOptionPane.ERROR_MESSAGE);
						p.printStackTrace();
					}
				}
			}
			
			if (event.getSource().equals(jButtonLimpiar)) {
				jTextFieldnumEmpleado.setText("");
				jTextFieldApellido.setText("");
				jTextFieldComision.setText("");
				jTextField1.setText("");
				jTextFieldSalario.setText("");
				jTextFielOficio.setText("");
				jComboBoxElegirDirector.setSelectedIndex(0);
				jComboBoxElegirDepartamento.setSelectedIndex(0);
			}

			if (event.getSource().equals(jButtonSalir)) {
				System.exit(-1);
			}
			
			abd.desconectar();
		}
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {

		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(EmpleadosDepartamentos.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(EmpleadosDepartamentos.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(EmpleadosDepartamentos.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(EmpleadosDepartamentos.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		}

		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new EmpleadosDepartamentos().setVisible(true);
			}
		});

		abd = new AccesoBdatos();
		abd.conectar();

		DefaultComboBoxModel<String> modelComboDepartamentos = new DefaultComboBoxModel<>();
		modelComboDepartamentos.addElement("Elige Departamento");
		for (Departamentos d : abd.listaDepartamentos()) {
			if (d != null) {
				modelComboDepartamentos.addElement(d.getDeptNo() + " / " + d.getDnombre());
			}
		}

		jComboBoxElegirDepartamento.setModel(modelComboDepartamentos);

		DefaultComboBoxModel<String> modelComboDirectores = new DefaultComboBoxModel<>();
		modelComboDirectores.addElement("Elige Director");
		for (Empleados e : abd.listaDirectores()) {
			if (e != null) {
				modelComboDirectores.addElement(e.getEmpNo() + " / " + e.getApellido());
			}
		}

		jComboBoxElegirDirector.setModel(modelComboDirectores);

		abd.desconectar();

	}

	// Variables declaration - do not modify
	private javax.swing.JButton jButtonConsultarEmpleado;
	private javax.swing.JButton jButtonEliminar;
	private javax.swing.JButton jButtonInsertar;
	private javax.swing.JButton jButtonLimpiar;
	private javax.swing.JButton jButtonModificar;
	private javax.swing.JButton jButtonSalir;
	private static javax.swing.JComboBox<String> jComboBoxElegirDepartamento;
	private static javax.swing.JComboBox<String> jComboBoxElegirDirector;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JTextField jTextFielOficio;
	private javax.swing.JTextField jTextField1;
	private javax.swing.JTextField jTextFieldApellido;
	private javax.swing.JTextField jTextFieldComision;
	private javax.swing.JTextField jTextFieldSalario;
	private javax.swing.JTextField jTextFieldnumEmpleado;
	// End of variables declaration
}
